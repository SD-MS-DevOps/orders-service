
name: Workflow DEV

on:
  push:
    branches:
      - develop
  repository_dispatch:
    types:
      - sonar-test
  workflow_dispatch:
  pull_request:
    branches:
      - develop  

jobs:
  
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven
  
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

     # - name: Cache SonarCloud packages
     #   uses: actions/cache@v4
     #   with:
     #       path: ~/.sonar/cache
     #       key: ${{ runner.os }}-sonar
     #       restore-keys: ${{ runner.os }}-sonar  

     # - name: Build test con sonarcloud
     #   env:
     #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SD-MS-DevOps_orders-service
      
      - name: Build and Test orders-service
        run: mvn -B package -DskipTests --file pom.xml
 
      - name: Upload JAR file
        run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v4
        with:
           name: Package
           path: staging 
       
       # Descargar los artefactos (archivos .jar)
      - name: Download JAR files
        uses: actions/download-artifact@v4
        with:
          name: Package
          path: ./artifact

      # Construir la imagen Docker con el JAR descargado
      - name: Build Docker image
        run: |
          docker build --build-arg JAR_FILE=./artifact/orders-service-example-0.0.1-SNAPSHOT-spring-boot.jar -t orders-service:dev-latest .

      # Iniciar sesi√≥n en AWS ECR
      #- name: Log in to Amazon ECR
      #  uses: aws-actions/amazon-ecr-login@v1

      # Etiquetar la imagen Docker para ECR
      #- name: Tag Docker image
      #  run: |
          # Sustituye con tu repositorio de ECR y el tag adecuado
      #    docker tag my-image-name:latest <aws_account_id>.dkr.ecr.<region>.amazonaws.com/my-repo-name:latest

      # Subir la imagen Docker a ECR
     # - name: Push Docker image to ECR
      #  run: |
          # Empujar la imagen a ECR
       #   docker push <aws_account_id>.dkr.ecr.<region>.amazonaws.com/my-repo-name:latest 


  sonar-test:
    uses: SD-MS-DevOps/orders-service/.github/workflows/sonacloud.yml@develop
  #    with:     